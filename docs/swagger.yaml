basePath: /api/v1
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  controllers.SuccessResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  models.Booking:
    description: Booking information
    properties:
      booking_uuid:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      class_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      created_at:
        example: "2025-04-26T00:00:00Z"
        format: date-time
        type: string
      status:
        example: confirmed
        type: string
      updated_at:
        example: "2025-04-26T00:00:00Z"
        format: date-time
        type: string
      user_id:
        example: user123
        type: string
    type: object
  models.Class:
    description: Class information
    properties:
      capacity:
        example: 20
        type: integer
      class_uuid:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      created_at:
        example: "2025-04-26T00:00:00Z"
        format: date-time
        type: string
      description:
        example: A relaxing yoga session for beginners
        type: string
      end_time:
        example: "2025-04-26T10:00:00Z"
        format: date-time
        type: string
      name:
        example: Yoga Class
        type: string
      start_time:
        example: "2025-04-26T09:00:00Z"
        format: date-time
        type: string
      updated_at:
        example: "2025-04-26T00:00:00Z"
        format: date-time
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@glofox.com
    name: API Support
  description: Glofox Backend API service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Glofox API
  version: "1.0"
paths:
  /bookings:
    get:
      description: Get all bookings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get all bookings
      tags:
      - bookings
    post:
      consumes:
      - application/json
      description: Create a new booking for a class
      parameters:
      - description: Booking information
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.Booking'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new booking
      tags:
      - bookings
  /bookings/{id}:
    delete:
      description: Delete a booking by its ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Delete a booking
      tags:
      - bookings
    get:
      description: Get a booking by its ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get a booking by ID
      tags:
      - bookings
    put:
      consumes:
      - application/json
      description: Update a booking's information
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Booking information
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.Booking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update a booking
      tags:
      - bookings
  /bookings/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancel an existing booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Cancel a booking
      tags:
      - bookings
  /classes:
    get:
      description: Get all fitness classes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Class'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get all classes
      tags:
      - classes
    post:
      consumes:
      - application/json
      description: Create a new fitness class
      parameters:
      - description: Class information
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/models.Class'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Class'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new class
      tags:
      - classes
  /classes/{classId}/bookings:
    get:
      description: Get all bookings for a specific class
      parameters:
      - description: Class ID
        in: path
        name: classId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get bookings by class
      tags:
      - bookings
  /classes/{id}:
    delete:
      description: Delete a class by its ID
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Delete a class
      tags:
      - classes
    get:
      description: Get a fitness class by its ID
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Class'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get a class by ID
      tags:
      - classes
    put:
      consumes:
      - application/json
      description: Update a class's information
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: integer
      - description: Class information
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/models.Class'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Class'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update a class
      tags:
      - classes
swagger: "2.0"
