basePath: /api/v1
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  models.BookingInput:
    description: Booking creation input
    properties:
      class_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      date:
        example: "2025-04-26"
        type: string
      trainee_name:
        example: John Doe
        type: string
    required:
    - class_id
    - date
    - trainee_name
    type: object
  models.BookingRes:
    description: Booking response information
    properties:
      booking_uuid:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      class_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      created_at:
        example: "2025-04-26T00:00:00Z"
        format: date-time
        type: string
      date:
        example: "2025-04-26"
        type: string
      trainee_name:
        example: John Doe
        type: string
    type: object
  models.Class:
    description: Class information (database model)
    properties:
      capacity:
        example: 20
        minimum: 1
        type: integer
      description:
        example: A relaxing yoga session for beginners
        type: string
      end_time:
        example: "2025-04-26T10:00:00Z"
        format: date-time
        type: string
      name:
        example: Yoga Class
        type: string
      start_time:
        example: "2025-04-26T09:00:00Z"
        format: date-time
        type: string
    type: object
  models.ResClass:
    description: Class information in API responses
    properties:
      capacity:
        example: 20
        minimum: 1
        type: integer
      classId:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      created_at:
        example: "2025-04-26T00:00:00Z"
        format: date-time
        type: string
      description:
        example: A relaxing yoga session for beginners
        type: string
      end_time:
        example: "2025-04-26T10:00:00Z"
        format: date-time
        type: string
      name:
        example: Yoga Class
        type: string
      start_time:
        example: "2025-04-26T09:00:00Z"
        format: date-time
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@glofox.com
    name: API Support
  description: Glofox Backend API service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Glofox API
  version: "1.0"
paths:
  /bookings:
    get:
      description: Retrieve a list of all bookings with their details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BookingRes'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get all bookings
      tags:
      - bookings
    post:
      consumes:
      - application/json
      description: Create a booking for a fitness class on a specific date
      parameters:
      - description: Booking information
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.BookingInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BookingRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "409":
          description: Class is full or not available on requested date
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new booking
      tags:
      - bookings
  /bookings/{id}:
    get:
      description: Get details of a specific booking by its UUID
      parameters:
      - description: Booking UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookingRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get booking details
      tags:
      - bookings
  /classes:
    get:
      description: Get all fitness classes
      parameters:
      - description: Filter classes by date (YYYY-MM-DD)
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ResClass'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get all classes
      tags:
      - classes
    post:
      consumes:
      - application/json
      description: Create a new fitness class
      parameters:
      - description: Class information
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/models.Class'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ResClass'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new class
      tags:
      - classes
  /classes/{classId}/bookings:
    get:
      description: Retrieve all bookings for a specific class
      parameters:
      - description: Class UUID
        in: path
        name: classId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BookingRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get bookings by class
      tags:
      - bookings
  /classes/{id}:
    get:
      description: Get a fitness class by its UUID
      parameters:
      - description: Class UUID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResClass'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get a class by UUID
      tags:
      - classes
swagger: "2.0"
